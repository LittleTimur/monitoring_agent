#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API Monitoring Server
"""

import requests
import json
import time

BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /health...")
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –î–∞–Ω–Ω—ã–µ: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_agents():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/agents...")
    try:
        response = requests.get(f"{BASE_URL}/api/agents")
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –î–∞–Ω–Ω—ã–µ: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_metrics():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ—Ç—Ä–∏–∫"""
    print("\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /metrics...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫
    test_metrics = {
        "timestamp": time.time(),
        "machine_type": "Windows",
        "cpu": {
            "usage_percent": 45.2,
            "temperature": 65.0,
            "core_temperatures": [62.0, 64.0, 66.0, 68.0],
            "core_usage": [40.0, 45.0, 50.0, 55.0]
        },
        "memory": {
            "total_bytes": 17179869184,  # 16 GB
            "used_bytes": 8589934592,     # 8 GB
            "free_bytes": 8589934592,     # 8 GB
            "usage_percent": 50.0
        },
        "disk": {
            "partitions": [
                {
                    "mount_point": "C:",
                    "filesystem": "NTFS",
                    "total_bytes": 256060514304,  # 256 GB
                    "used_bytes": 128030257152,   # 128 GB
                    "free_bytes": 128030257152,   # 128 GB
                    "usage_percent": 50.0
                }
            ]
        },
        "network": {
            "interfaces": [
                {
                    "name": "Ethernet",
                    "bytes_sent": 1024000,
                    "bytes_received": 2048000,
                    "packets_sent": 1000,
                    "packets_received": 2000,
                    "bandwidth_sent": 1024,
                    "bandwidth_received": 2048
                }
            ]
        }
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/metrics",
            json=test_metrics,
            headers={"Content-Type": "application/json"}
        )
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞"""
    print("\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞...")
    
    agent_id = "test_agent_123"
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        response = requests.get(f"{BASE_URL}/api/agents/{agent_id}/config")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {response.json()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    new_config = {
        "update_frequency": 30,
        "enabled_metrics": ["cpu", "memory", "disk"],
        "custom_scripts": ["script1.sh", "script2.ps1"]
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/agents/{agent_id}/config",
            json=new_config,
            headers={"Content-Type": "application/json"}
        )
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Monitoring Server API")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    if not test_health():
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ endpoints
    test_agents()
    test_metrics()
    test_config()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs")

if __name__ == "__main__":
    main() 