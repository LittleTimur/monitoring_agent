#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏
"""

import requests
import json
import time
from typing import Dict, Any

BASE_URL = "http://localhost:8000"

def test_agent_registration():
    """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–æ–≤"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–æ–≤...")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
    agent_data = {
        "agent_id": "test_agent_001",
        "machine_name": "Test Machine 1",
        "machine_type": "Windows",
        "ip_address": "192.168.1.100"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/agents/test_agent_001/register",
            params=agent_data
        )
        print(f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –î–∞–Ω–Ω—ã–µ: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_agent_statistics():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≥–µ–Ω—Ç–æ–≤"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≥–µ–Ω—Ç–æ–≤...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/agents/statistics")
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –î–∞–Ω–Ω—ã–µ: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return False

def test_agent_list():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤"""
    print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/agents/")
        print(f"‚úÖ –°–ø–∏—Å–æ–∫ –∞–≥–µ–Ω—Ç–æ–≤ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≥–µ–Ω—Ç–æ–≤: {len(response.json())}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {e}")
        return False

def test_agent_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞"""
    print("\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞...")
    
    agent_id = "test_agent_001"
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        response = requests.get(f"{BASE_URL}/api/agents/{agent_id}/config")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {response.json()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    new_config = {
        "update_frequency": 30,
        "enabled_metrics": ["cpu", "memory", "disk"],
        "server_url": "http://localhost:8000/metrics",
        "agent_id": agent_id,
        "machine_name": "Test Machine 1"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/agents/{agent_id}/config",
            json=new_config
        )
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_request_metrics():
    """–¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Ç—Ä–∏–∫ –æ—Ç –∞–≥–µ–Ω—Ç–∞"""
    print("\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Ç—Ä–∏–∫...")
    
    agent_id = "test_agent_001"
    
    # –ó–∞–ø—Ä–æ—Å –º–µ—Ç—Ä–∏–∫ –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
    metrics_request = {
        "metrics": ["cpu", "memory", "disk"],
        "immediate": True
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/agents/{agent_id}/request_metrics",
            json=metrics_request
        )
        print(f"‚úÖ –ó–∞–ø—Ä–æ—Å –º–µ—Ç—Ä–∏–∫ –æ—Ç –∞–≥–µ–Ω—Ç–∞ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Ç—Ä–∏–∫: {e}")
    
    # –ó–∞–ø—Ä–æ—Å –º–µ—Ç—Ä–∏–∫ –æ—Ç –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
    try:
        response = requests.post(
            f"{BASE_URL}/api/agents/request_metrics_from_all",
            json=metrics_request
        )
        print(f"‚úÖ –ó–∞–ø—Ä–æ—Å –º–µ—Ç—Ä–∏–∫ –æ—Ç –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Ç—Ä–∏–∫ –æ—Ç –≤—Å–µ—Ö: {e}")
        return False

def test_agent_commands():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –∞–≥–µ–Ω—Ç–∞–º"""
    print("\nüéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∞–≥–µ–Ω—Ç–∞–º...")
    
    agent_id = "test_agent_001"
    
    # –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    try:
        response = requests.post(f"{BASE_URL}/api/agents/{agent_id}/restart")
        print(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {e}")
    
    # –ö–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    try:
        response = requests.post(f"{BASE_URL}/api/agents/{agent_id}/stop")
        print(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
    
    # –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
    command = {
        "command": "test_command",
        "data": {"test_param": "test_value"},
        "timestamp": "2024-01-01T00:00:00"
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/agents/{agent_id}/command",
            json=command
        )
        print(f"‚úÖ –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False

def test_metrics_reception():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –æ—Ç –∞–≥–µ–Ω—Ç–∞"""
    print("\nüì• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –º–µ—Ç—Ä–∏–∫ –æ—Ç –∞–≥–µ–Ω—Ç–∞
    metrics_data = {
        "timestamp": time.time(),
        "machine_type": "Windows",
        "agent_id": "test_agent_001",
        "machine_name": "Test Machine 1",
        "cpu": {
            "usage_percent": 45.2,
            "temperature": 65.0,
            "core_temperatures": [62.0, 64.0, 66.0, 68.0],
            "core_usage": [40.0, 45.0, 50.0, 55.0]
        },
        "memory": {
            "total_bytes": 17179869184,
            "used_bytes": 8589934592,
            "free_bytes": 8589934592,
            "usage_percent": 50.0
        }
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/metrics",
            json=metrics_data,
            headers={"Content-Type": "application/json"}
        )
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
            return
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
    test_agent_registration()
    test_agent_statistics()
    test_agent_list()
    test_agent_config()
    test_request_metrics()
    test_agent_commands()
    test_metrics_reception()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs")

if __name__ == "__main__":
    main() 